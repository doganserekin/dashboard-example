{"version":3,"sources":["Card.js","index.js"],"names":["onElementAppear","el","index","spring","onUpdate","val","style","opacity","delay","onExit","type","removeElement","config","overshootClamping","transform","onComplete","onGridExit","onListExit","Card","shouldFlip","prev","current","this","props","id","title","info","stagger","message","flipId","addToFilteredIds","bgColor","onAppear","shouldInvert","className","backgroundColor","inverseFlipId","translate","delayUntil","flex","height","marginTop","fontSize","fontWeight","PureComponent","ListExample","state","sort","filteredIds","loader","loading","loop","i","setInterval","setState","axios","get","then","res","data","masalar","clearInterval","prevState","concat","color","progress","onLoaderFinished","flipKey","JSON","stringify","staggerConfig","default","reverse","speed","decisionData","filter","d","includes","COUNT","a","b","map","USERNAME","INVOICE_STATION","TPNUM","MESSAGE","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e5c0afd.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport { Flipped, spring } from \"react-flip-toolkit\";\r\n\r\nconst onElementAppear = (el, index) =>\r\n  spring({\r\n    onUpdate: val => {\r\n      el.style.opacity = val;\r\n    },\r\n    delay: index * 50\r\n  });\r\n\r\nconst onExit = type => (el, index, removeElement) => {\r\n  spring({\r\n    config: { overshootClamping: true },\r\n    onUpdate: val => {\r\n      el.style.transform = `scale${type === \"grid\" ? \"X\" : \"Y\"}(${1 - val})`;\r\n    },\r\n    delay: index * 50,\r\n    onComplete: removeElement\r\n  });\r\n\r\n  return () => {\r\n    el.style.opacity = \"\";\r\n    removeElement();\r\n  };\r\n};\r\n\r\nconst onGridExit = onExit(\"grid\");\r\nconst onListExit = onExit(\"list\");\r\n\r\nclass Card extends PureComponent {\r\n\r\n  shouldFlip = (prev, current) => {\r\n    if (prev.type !== current.type) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  render() {\r\n    const { id, title, info, type, stagger, message, addToFilteredIds } = this.props;\r\n    const flipId = `item-${id}`;\r\n    var bgColor = 'white';\r\n\r\n    if(id <= 5){\r\n      bgColor = 'orange';\r\n    } else {{\r\n      bgColor = '#29B63E';\r\n    }}\r\n\r\n    return (\r\n      <Flipped\r\n        flipId={flipId}\r\n        onAppear={onElementAppear}\r\n        onExit={type === \"grid\" ? onGridExit : onListExit}\r\n        key={flipId}\r\n        stagger={stagger}\r\n        shouldInvert={this.shouldFlip}\r\n      >\r\n        <li className=\"fm-item\" style={{backgroundColor: bgColor}}>\r\n          <Flipped inverseFlipId={flipId}>\r\n            <div>\r\n              <Flipped\r\n                flipId={`${flipId}-content`}\r\n                translate\r\n                shouldFlip={this.shouldFlip}\r\n                delayUntil={flipId}\r\n              >\r\n                <div style={{flex: 1}}>\r\n                  <div style={{flex: 2, height: 80}}>\r\n                  <h3>{title}</h3>\r\n                  </div>\r\n\r\n                  <div style={{flex: 1}}>\r\n                  <p>{info}</p>\r\n                  </div>\r\n\r\n                  <div style={{flex: 1, marginTop: -20}}>\r\n                  <h2>{id}</h2>\r\n                  <p style={{fontSize: 18, marginTop: -40}}>Adet Ürün Kaldı</p>\r\n                  </div>\r\n\r\n                  <div>\r\n                  <text style={{fontSize: 18, fontWeight: \"bold\"}}>{message}</text>\r\n                  </div>\r\n\r\n\r\n\r\n                </div>\r\n              </Flipped>\r\n\r\n              <Flipped\r\n                flipId={`${flipId}-button`}\r\n                shouldFlip={this.shouldFlip}\r\n                delayUntil={flipId}\r\n              >\r\n                {/* <button\r\n                  className=\"fm-remove\"\r\n                  onClick={() => addToFilteredIds(id)}\r\n                >\r\n                  &times;\r\n                </button> */}\r\n              </Flipped>\r\n            </div>\r\n          </Flipped>\r\n        </li>\r\n      </Flipped>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import ReactDOM from \"react-dom\";\nimport React, { Component } from \"react\";\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\nimport Card from \"./Card\";\n// import Data from \"./data\";\nimport \"./styles.css\";\nimport \"sanitize.css\";\n\nimport axios from 'axios'\n\nimport LoadingBar from 'react-top-loading-bar';\n\nclass ListExample extends Component {\n  state = {\n    type: \"grid\",\n    sort: \"asc\",\n    filteredIds: [],\n    stagger: \"forward\",\n    spring: \"noWobble\",\n    loader: 0,\n    loading : true,\n  };\n\n  constructor(props) {\n    super(props);\n    this.masalar = [\n      // {\n      //   TPNUM: \"210410803012\",\n      //   USERNAME: \"ELIF AYDEMIR\",\n      //   INVOICE_STATION: \"MEZ4Z020\",\n      //   COUNT: 20.0,\n      // },\n      // {\n      //   TPNUM: \"210410803031\",\n      //   USERNAME: \"MIZGIN GÖNENLI\",\n      //   INVOICE_STATION: \"MEZ4Z023\",\n      //   COUNT: 20.0,\n      // },\n      // {\n      //   TPNUM: \"210410802985\",\n      //   USERNAME: \"BIRGÜL AYDıN\",\n      //   INVOICE_STATION: \"MEZ4Z012\",\n      //   COUNT: 18.0,\n      // },\n      // {\n      //   TPNUM: \"210410802911\",\n      //   USERNAME: \"EL ZARA POLAT\",\n      //   INVOICE_STATION: \"MEZ4Z003\",\n      //   COUNT: 6.0,\n      // },\n      // {\n      //   TPNUM: \"210410803023\",\n      //   USERNAME: \"EBRU ALKAN\",\n      //   INVOICE_STATION: \"MEZ4Z015\",\n      //   COUNT: 4.0,\n      // },\n      // {\n      //   TPNUM: \"210410802879\",\n      //   USERNAME: \"SEVDDA SÖGÜT\",\n      //   INVOICE_STATION: \"MEZ4Z011\",\n      //   COUNT: 3.0,\n      // },\n    ];\n }\n\n  loop = () => {\n\n      var i = setInterval(() => {\n\n        if(this.state.loader < 95){\n          this.setState({loader: this.state.loader + 1})\n        }\n\n      }, 50);\n\n      axios.get(`http://sap-pas-01.hepsiburada.dmz:8000/sap(bD10ciZjPTIwMA==)/bc/bsp/sap/zwm_bsp_021/request.html?json_data={\"LGNUM\":\"DM6\"}`)\n      .then(res => {\n        this.state.loading ? this.setState({loading: false}) : this.setState({loading: false})\n        const data = res.data;\n        this.masalar = data;\n        this.addToFilteredIds();\n        this.setState({filteredIds: []})\n        this.setState({loader: 100})\n        clearInterval(i)\n      })\n\n  }\n\n  componentDidMount() {\n    setInterval(() => this.loop(), 10000);\n  }\n\n  addToFilteredIds = id => {\n    this.setState(prevState => {\n      return {\n        filteredIds: prevState.filteredIds.concat(id)\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"fm-example\" style={{backgroundColor: 'white'}}>\n        <LoadingBar\n        color='#ff6000'\n        progress={this.state.loader}\n        onLoaderFinished={() => this.setState({loader: 0})}\n        height = {10}\n      />\n\n          {\n          this.state.loading ?\n            <div className=\"loader\">\n              <div className=\"bounce\"></div>\n            </div>\n            :\n\n            <Flipper\n              flipKey={`${this.state.type}-${this.state.sort}-${JSON.stringify(\n                this.state.filteredIds\n              )}-${JSON.stringify(this.state.stagger)}`}\n              spring={this.state.spring}\n              staggerConfig={{\n                default: {\n                  reverse: this.state.stagger !== \"forward\",\n                  speed: 1\n                }\n              }}\n              decisionData={this.state}\n            >\n              {/* <div className=\"fm-flex-container\" style={{justifyContent: 'center'}}>\n\n              </div> */}\n\n              <Flipped flipId=\"list\">\n                <div className={this.state.type === \"grid\" ? \"fm-grid\" : \"fm-list\"} style={{backgroundColor: 'white'}}>\n                  <Flipped inverseFlipId=\"list\">\n                    <ul className=\"list-contents\">\n                      {[...this.masalar]\n                        .filter(d => !this.state.filteredIds.includes(d.COUNT))\n                        .sort((a, b) => {\n                          if (this.state.sort === \"asc\") {\n                            return a.COUNT - b.COUNT;\n                          } else {\n                            return b.COUNT - a.COUNT;\n                          }\n                        })\n                        .map(({ USERNAME, INVOICE_STATION, COUNT, TPNUM, MESSAGE }) => (\n                          <Card\n                            id={COUNT}\n                            title={USERNAME}\n                            info={INVOICE_STATION}\n                            stagger={[\"forward\", \"reverse\"].includes(\n                              this.state.stagger\n                            )}\n                            type={this.state.type}\n                            key={TPNUM}\n                            message={MESSAGE}\n                            // addToFilteredIds={this.addToFilteredIds}\n                          />\n                        ))}\n                    </ul>\n                  </Flipped>\n                </div>\n              </Flipped>\n            </Flipper>\n\n          }\n\n\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<ListExample />, document.getElementById(\"root\"));\n"],"sourceRoot":""}